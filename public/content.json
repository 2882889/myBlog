[{"title":"Learn JavaScript","date":"2017-01-11T03:10:12.000Z","path":"2017/01/11/JavaScript/","text":"Learn JavaScriptEquality (相等比较符)1234var foo = 42;var bar = 42;var baz = \"42\";var qux = \"life\"; 定义了四个变量在Javascript中 ==是用来比较两个值但是不会判断类型故 foo == baz返回的值是true 使用==比较的时候编译器会先把类型转换成相同的类型,再去比较 因此在JavaScript 要是比较不同类型的两个值可以使用===这样会先判断类型,如果类型不同就会返回false 所以推荐使用===比较 注意: 1.NaN是个特殊的Number,他与所有其他值都不相等,包括它自己1NaN === NaN ; // false 唯一能判断NaN的方法是通过isNaN()函数:1isNaN(NaN); // true 2.浮点数的比较:11/3 === (1 - 2 / 3); //false 这个结果是正确的,出现这个结果这是因为浮点数在运算过程中会产生误差,计算机无法精确的表示无限小数,所以要比较两个浮点数是否相等,只能计算他们之差的绝对值,看是否小于某个阈值: 1Math.abs(1/3 - (1 - 2 / 3)) &lt; 0.0000001; //true TypesnumbersJavaScript中只有一种数字类型 – 64-bit float point,类似于Java中的double类型,所以在JavaScript中1和1.0是相同的值 字符串字符串是以’单引号’或”双引号”括起来的文本,如&#39;abc&#39; &quot;xyz&quot; 注意&#39; &#39;和&quot; &quot;并不是字符串的一部分 如果字符串中包含&#39; 布尔值JavaScript中的布尔值有true和false两种值,可以直接用true或false表示,也可以通过布尔运算计算出来 null和undefinednull表示一个”空”的值,同Java中的null,Swift中的nil,Python中的None用法类似.undefined表示”未定义”.JavaScript设计的时候希望用null表示一个空的值,用undefined表示值未定义,但是大多数情况下我们都应该用null.undefined仅仅在判断函数参数是否传递的情况下有用 数组数组是一组按顺序排列的集合,集合的每个值称为元素.JavaScript的数组可以包括任意数据类型.创建方法: 1[1,2,3.14,\"hello\",null,true]; //推荐使用 另一种创建方法: 1new Array(1,2,3); 对象对象是一组由键-值组成的无序集合: 12345678var person = &#123; name: 'XiaoWang', tags: ['js', 'web', 'mobile'], age: 12, city: 'shanghai', hasCar: false, zipcode: null&#125;; JavaScript对象的键都是字符串类型,值可以是任意数据类型,每个键都是对象的一个属性,获取属性的方法: 12person.name; // 'XiaoWang'person.zipcode; // null 注:var person 是JavaScript的一个变量,person是变量名,变量名是大小写英文,数字,$和_的组合,且不能用数字开头,也不能使用JavaScript中的关键字 strict模式蛋疼的布兰登在设计JavaScript的时候为了赶工期,并没有强制使用var声明变量,如果一个变量没有通过var声明就被使用,这个变量就会被自动声明为全局变量 1i = 10; //i就是一个全局变量 如果在不同的JavaScript文件中,你都使用了同样名字的变量,而且都没有用var声明,那么你就麻烦了. 因此,为了给布兰登填坑,ECMA在后续的规范中推出了strict模式,在strict模式下运行JavaScript代码不允许使用没有var声明的变量,如果有那么就给你报错 启动strict模式的方法很简单,就是在JavaScript代码的第一行写上: 1'use strict'; 注:如果你用的是老爷机,你的浏览器太老了,他会自以为是的把上面那就话当做一个字符串语句执行,如果这样的话还是换个最新版的浏览器吧 Advanced Operaters (高级运算符)取余运算 x = y % 2累加运算 a = 5 c = a++/Users/YaoWanXin/Desktop/app.html resulets : c = 5 and a = 6 c = ++a resulets : c = 6 and a = 6累减运算 a = 5 c = a-- resulets : c = 5 and a = 4 c = --a resulets : c = 4 and a = 4","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"}]},{"title":"appium测试时候的那些事","date":"2017-01-11T03:10:12.000Z","path":"2017/01/11/appium测试时候的那些事/","text":"遇到的问题1.org.openqa.selenium.WebDriverException: Method has not yet been implemented 在使用appium跑java脚本的时候,如果出现异常,提示如上面显示的,说明你的appium安装出现了问题,具体原因是我的appium当时卸载的时候没有完全卸载干净,导致appium无法连接到WebDriverException 解决方法: 卸载appium ,最好再使用清理工具如:cleanMyMac 清理一下残留文件,然后从新安装新的appium ,问题就可以解决,如果还不行,可以新建一个电脑账户,在新的账户中重新搭建appium也可以","tags":[{"name":"appium","slug":"appium","permalink":"http://yoursite.com/tags/appium/"}]},{"title":"再给你写一个看看这就是所谓的blog","date":"2017-01-11T03:10:12.000Z","path":"2017/01/11/bridged/","text":"#iOS的CF和OC中间的类型转换 ##Toll-Free bridged","tags":[{"name":"忘了叫什么","slug":"忘了叫什么","permalink":"http://yoursite.com/tags/忘了叫什么/"}]},{"title":"再给你写一个看看这就是所谓的blog","date":"2017-01-11T03:10:12.000Z","path":"2017/01/11/再给你写一个看看这就是所谓的blog/","text":"😁哈哈,又发了一个,这次能发钱了,来来来,有钱的捧个钱场没钱的充钱捧个钱场,O(∩∩)O哈哈哈~,文字一定要多,不然支付宝的二维码就看不到了,O(∩∩)O哈哈~ 都这么多了,还不够么 再打点吧 感觉还不够 现在应该差不多了 最后再来点 这次一定够了","tags":[{"name":"忘了叫什么","slug":"忘了叫什么","permalink":"http://yoursite.com/tags/忘了叫什么/"}]},{"title":"my first blog","date":"2017-01-11T03:02:30.000Z","path":"2017/01/11/my-first-blog/","text":"这就是传说中的第一个blog #超级偶像","tags":[{"name":"hello","slug":"hello","permalink":"http://yoursite.com/tags/hello/"}]},{"title":"Hello World","date":"2017-01-11T02:34:00.000Z","path":"2017/01/11/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]